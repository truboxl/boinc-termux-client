diff --git a/client/app_start.cpp b/client/app_start.cpp
index d5ea25b27f..d3c298af0e 100644
--- a/client/app_start.cpp
+++ b/client/app_start.cpp
@@ -81,6 +81,10 @@ using std::string;
 
 #include "app.h"
 
+#ifdef __ANDROID__
+#include <stdlib.h> // getenv(), setenv(), unsetenv()
+char helper_exec[6] = "proot";
+#endif
 
 #ifdef _WIN32
 // Dynamically link to these functions at runtime;
@@ -1127,6 +1131,40 @@ int ACTIVE_TASK::start(bool test) {
             //
             umask(2);
             retval = execv(switcher_path, argv);
+#ifdef __ANDROID__
+#if defined(__aarch64__) || defined(__arm__)
+        } else if (strstr(exec_name, "unknown-linux-gnu")) {
+#elif defined(__x86_64__) || defined(__i386__)
+        } else if (strstr(exec_name, "pc-linux-gnu")) {
+#endif
+            // Experimental GNU/Linux tasks support via proot
+            argv[0] = helper_exec;
+            argv[1] = buf;
+            parse_command_line(cmdline, argv+2);
+            // backup and unset LD_PRELOAD var for proot
+            char *old_env = getenv("LD_PRELOAD");
+            unsetenv("LD_PRELOAD");
+            // helper_exec must be in PATH var
+            retval = execvp(helper_exec, argv);
+            // set LD_PRELOAD var back
+            setenv("LD_PRELOAD", old_env, 1);
+            free(old_env);
+#if defined(__aarch64__)
+        } else if (strstr(exec_name, "arm-android-linux-gnu")) {
+#elif defined(__x86_64__)
+        } else if (strstr(exec_name, "x86-android-linux-gnu")) {
+#endif
+#if defined(__aarch64__) || defined(__x86_64__)
+            // Termux 32bit compatibility on 64bit device
+            argv[0] = buf;
+            parse_command_line(cmdline, argv+1);
+            char *old_env = getenv("LD_PRELOAD");
+            unsetenv("LD_PRELOAD");
+            retval = execv(buf, argv);
+            setenv("LD_PRELOAD", old_env, 1);
+            free(old_env);
+#endif
+#endif // __ANDROID__
         } else {
             argv[0] = buf;
             parse_command_line(cmdline, argv+1);
@@ -1148,6 +1186,16 @@ int ACTIVE_TASK::start(bool test) {
             "[task] ACTIVE_TASK::start(): forked process: pid %d\n", pid
         );
     }
+#ifdef __ANDROID__
+    // get debug info from client not from forked task
+#if defined(__aarch64__) || defined(__arm__)
+    if (strstr(exec_name, "unknown-linux-gnu")) {
+#elif defined(__x86_64__) || defined(__i386__)
+    if (strstr(exec_name, "pc-linux-gnu")) {
+#endif
+        msg_printf(NULL, MSG_INFO, "Helper: Running %s via %s\n", exec_name, helper_exec);
+    }
+#endif // __ANDROID__
 
 #endif
     set_task_state(PROCESS_EXECUTING, "start");
